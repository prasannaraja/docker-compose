services:
  #network
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    pull_policy: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.local`)"
      - "traefik.http.routers.api.service=api@internal"
  #ad-block
  adguardhome:
    image: adguard/adguardhome:latest
    container_name: adguard-home
    restart: unless-stopped
    pull_policy: always
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "3000:3000/tcp"
      - "853:853/tcp"
      - "784:784/udp"
      - "853:853/udp"
      - "8853:8853/udp"
      - "5443:5443/tcp"
      - "5443:5444/udp"
    networks:
      - proxy
    volumes:
      - ${BASE_PATH}/adguard/workdir:/opt/adguardhome/work
      - ${BASE_PATH}/adguard/confdir:/opt/adguardhome/conf
    environment:
      - TZ=Europe/Malta
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adguard.entrypoints=web"
      - "traefik.http.routers.adguard.rule=Host(`adguard.local`)"
      - "traefik.http.services.adguard.loadbalancer.server.port=3000"
  #docker-tool
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    pull_policy: always
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "9000:9000"
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${BASE_PATH}/portainer/data:/data
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.portainer.rule=Host(`docker.local`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
  #databases
  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    restart: unless-stopped
    command: mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=50
    volumes:
      - "/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: Welc0me$$
      MYSQL_USER: photoprism
      MYSQL_PASSWORD: insecure
      MYSQL_DATABASE: photoprism
    networks:
      - proxy
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    pull_policy: always
    environment:
      - "ACCEPT_EULA=Y"
      - "MSSQL_SA_PASSWORD=sasa@123"
    ports:
      - "1401:1433"
    networks:
      - proxy
  postgres-db:
    image: postgres
    restart: always
    container_name: postgres
    ports:
      - 5432:5432
    networks:
      - proxy
    environment:
      - "POSTGRES_USER=metabase"
      # - "POSTGRES_DB=metabase"
      - "POSTGRES_PASSWORD=Welc0me123"
      # - "PGDATA=/var/lib/postgresql/data"
    # volumes:
    # - c:/docker/metabase/pgdata:/var/lib/postgresql/data

networks:
  proxy:
    external: true
